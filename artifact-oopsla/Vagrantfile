# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  # TODO: never Ubuntu versions than bionic have problems with installing xfce. Maybe switch to Debian?
  config.vm.box = "ubuntu/bionic64"

  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true
    vb.name = "artifact"

    # Customize the amount of memory on the VM:
    vb.memory = "8192"
    vb.cpus = "4"

    vb.customize ["modifyvm", :id, "--uart1", "off"]
    vb.customize ["modifyvm", :id, "--uartmode1", "file", "/tmp/artifact.log"]
    vb.customize ["modifyvm", :id, "--uartmode1", "disconnected"]
  end

  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.provision "file", source: "the_artifact.tgz", destination: "Desktop/the_artifact.tgz"
  config.vm.provision "shell", inline: <<-SHELL
    set -e
    apt-get update
    # pkg-config and later is necessary for coqide
    apt-get install -y xfce4 virtualbox-guest-dkms virtualbox-guest-utils virtualbox-guest-x11 gedit unzip htop python2.7 m4 build-essential libgmp-dev libmpfr-dev pkg-config libcairo-dev libexpat1-dev libgtk-3-dev libgtksourceview-3.0-dev evince adwaita-icon-theme-full libsnappy-dev

    mkdir -p /etc/systemd/system/getty@tty1.service.d/
    touch /etc/systemd/system/getty@tty1.service.d/override.conf
    echo "[Service]" >> /etc/systemd/system/getty@tty1.service.d/override.conf
    echo "ExecStart=" >> /etc/systemd/system/getty@tty1.service.d/override.conf
    echo "ExecStart=-/sbin/agetty --autologin vagrant --noclear %I $TERM" >> /etc/systemd/system/getty@tty1.service.d/override.conf

    wget -q -O opam "https://github.com/ocaml/opam/releases/download/2.1.0/opam-2.1.0-x86_64-linux"
    install opam /usr/local/bin/opam
  SHELL

  config.vm.provision "shell", path: "install_deps.sh"

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    set -e

    opam init --disable-sandboxing --enable-shell-hook
    chmod +x ~/.opam/opam-init/init.sh

    echo 'if [ -z "${DISPLAY}" ] && [ "${XDG_VTNR}" -eq 1 ]; then exec startx; fi' > ~/.profile
    if grep -Fq "test -r ~/.opam/opam-init/init.sh" ~/.bashrc; then
       echo "opam hook already setup"
    else
       echo 'test -r ~/.opam/opam-init/init.sh && . ~/.opam/opam-init/init.sh > /dev/null 2> /dev/null || true' >> ~/.bashrc
    fi

    whoami
    cd Desktop
    tar xf the_artifact.tgz
    cd the_artifact
    ./build_artifact.sh
  SHELL

  #NOTE: Uncomment the following to create a CoqIDE shortcut, set it as default application for CoqIDE files, and add it to the launcher.
  # YOU need to fill in the right opam switch in CoqIDE.desktop beforehand (the one you setup for your artifact, and into which you installed CoqIDE).
  config.vm.provision "file", source: "CoqIDE.desktop", destination: "Desktop/CoqIDE.desktop"
  config.vm.provision "file", source: "CoqIDE.desktop", destination: "~/.local/share/applications/CoqIDE.desktop"
  config.vm.provision "file", source: "coqide.bindings", destination: "~/.config/coq/coqide.bindings"
  config.vm.provision "file", source: "mimeapps.list", destination: "~/.config/mimeapps.list"
end
